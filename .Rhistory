source('~/Documents/dockerty/countEvents.R')
kable(eventsTable)
events
dim(events)
dim(events[1,3])
events[1,3]
getEventCounts <- function(n) {
#father
colname <- paste('fv',num.toColnum(n),sep='')
f[which(is.na(f[,colname])),colname] <- 0
f1 <- table(f[,colname],useNA='always')
f2 <- round(prop.table(f1),2)
f3 <- margin.table(f1)
#mother
colname <- paste('mv',num.toColnum(n),sep='')
m[which(is.na(m[,colname])),colname] <- 0
m1 <- table(m[,colname],useNA='always')
m2 <- round(prop.table(m1),2)
m3 <- margin.table(m1)
return(c(round(f1[2],0),
f2[2],
round(f1[1],0),
f2[1],
m1[2],m2[2],m1[1],m2[1],
# total father and mother
f1[2]+m1[2],
round((f1[2]+m1[2])/(f3[1]+m3[1]),2),
f1[1]+m1[1],
round((f1[1]+m1[1])/(f3[1]+m3[1]),2)))
}
for (i in 1:18) {
if (i == 1) {
events <- getEventCounts(1)
} else {
events <- rbind(events,getEventCounts(i))
}
}
events[1,3]
dim(events)
eventsTable<- cbind(descs,events[1,],events[2,])
eventsTable<-
dim(events)
events[1,3]
for (i in 1:18) {
if (i == 1) {
events <- getEventCounts(1)
} else {
events <- rbind(events,getEventCounts(i))
}
}
events[1,3]
dim(events)
table(events)
source('~/Documents/dockerty/countEvents.R')
eventsTable <- table(events)
kable(events)
kable(cbind(descs,events))
colnames(events) <- c('Life event',)
colnames(events) <- c('Life event','Y','%','N','%',
'Y','%','N','%',
'Y','%','N','%')
kable(cbind(descs,events))
dim(events)
events <- cbind(descs,events)
colnames(events) <- c('Life event','Y','%','N','%',
'Y','%','N','%',
'Y','%','N','%')
kable(cbind(descs,events))
rownames(events) <- NULL
kable(cbind(descs,events))
kable(events)
add_header_above(et, c(" ", "Fathers" = 4, "Mothers" = 4,"Total"=4))
et <- kable(events)
add_header_above(et, c(" ", "Fathers" = 4, "Mothers" = 4,"Total"=4))
et <- kable(events,digits=4)
add_header_above(et, c(" ", "Fathers" = 4, "Mothers" = 4,"Total"=4))
et <- kable(events,digits=2)
add_header_above(et, c(" ", "Fathers" = 4, "Mothers" = 4,"Total"=4))
source('~/Documents/dockerty/countEvents.R')
getEventCounts <- function(n) {
#father
colname <- paste('fv',num.toColnum(n),sep='')
f[which(is.na(f[,colname])),colname] <- 0
f1 <- table(f[,colname],useNA='always')
f2 <- round(prop.table(f1),2)
f3 <- margin.table(f1)
#mother
colname <- paste('mv',num.toColnum(n),sep='')
m[which(is.na(m[,colname])),colname] <- 0
m1 <- table(m[,colname],useNA='always')
m2 <- round(prop.table(m1),2)
m3 <- margin.table(m1)
return(c(round(f1[2],0),
f2[2],
round(f1[1],0),
f2[1],
m1[2],m2[2],m1[1],m2[1],
# total father and mother
f1[2]+m1[2],
round((f1[2]+m1[2])/(f3[1]+m3[1]),2),
f1[1]+m1[1],
round((f1[1]+m1[1])/(f3[1]+m3[1]),2)))
}
e <- getEventCounts(1)
e
events[1,2]
eventsTable[1,3]
eventsTable
eventsTable
source('~/Documents/dockerty/countEvents.R')
events[1,1]
events[1,]
events[12]
events[1,2]
n = 1
#father
colname <- paste('fv',num.toColnum(n),sep='')
f[which(is.na(f[,colname])),colname] <- 0
f1 <- table(f[,colname],useNA='always')
f2 <- round(prop.table(f1),2)
f2
round(prop.table(f1),2)
prop.table(f1)
?kable
?kable
et <- kable(events,digits=2) %>%
kable_styling(full_width = F)
add_header_above(et, c(" ", "Fathers" = 4, "Mothers" = 4,"Total"=4))
source('~/Documents/dockerty/countEvents.R')
e <- getEventCounts(1,f=f,m=m)
f$p1
table(f$p10)
table(f$p1)
f$id
2 *f*id
2 *f$id
source('~/Documents/dockerty/countEvents.R')
f.cases <- f[which(f$id < 2000),]
f.controls <- f[which(f$id >= 2000),]
source('~/Documents/dockerty/countEvents.R')
m.cases <- m[which(m$id < 2000),]
m.controls <- m[which(m$id >= 2000),]
source('~/Documents/dockerty/countEvents.R')
source('~/Documents/dockerty/countEvents.R')
e.all <- getEventCounts(1,f=f,m=m)
f.cases <- f[which(f$id < 2000),]
f.controls <- f[which(f$id >= 2000),]
m.cases <- m[which(m$id < 2000),]
m.controls <- m[which(m$id >= 2000),]
e.cases <- getEventCounts(1,f=f.cases,m=m.cases)
e.controls <- getEventCounts(1,f=f.controls,m=m.controls)
source('~/Documents/dockerty/countEvents.R')
source('~/Documents/dockerty/countEvents.R')
getAllEventCounts <- function(f,m) {
for (i in 1:18) {
if (i == 1) {
events <- getEventCounts(1,f=f,m=m)
} else {
events <- rbind(events,getEventCounts(i,f=f,m=m))
}
}
}
source('~/Documents/dockerty/countEvents.R')
source('~/Documents/dockerty/countEvents.R')
e.all <- getEventCounts(1,f=f,m)
e.cases <- getEventCounts(1,f=f.cases,m=m.cases)
source('~/Documents/dockerty/countEvents.R')
e.all <- getEventCounts(1,f=f,m)
e.cases <- getEventCounts(1,f=f.cases,m=m.cases)
e.controls <- getEventCounts(1,f=f.controls,m=m.controls)
head(e.cases)
head(e.controls)
source('~/Documents/dockerty/countEvents.R')
events.all <- cbind(descs,events.all)
source('~/Documents/dockerty/countEvents.R')
library(kableExtra)
events.all <- cbind(descs,events.all)
setwd('~/Documents/dockerty')
f <- read.csv('fathmentalh.csv')
m <- read.csv('mothmentalh.csv')
colnames(f)
dim(f)
table(f$fv130,useNA='always')
round(prop.table(table(f$fv130,useNA='always')),2)
descs <- c( 'Serious illness or injury',
'Serious illness or injury in close relative',
'Death of 1st degree relative',
'Death in more distant relative',
'Marital separation',
'Breaking off steady relationship',
'Serious problem with close friend, neighbour,..',
'Unemployment for more than 1 month',
'Being sacked from your job',
'Major financial crisis',
'Problems with police or court appearance',
'Something valuable lost of stolen',
'Change of job, including quitting,..',
'Marriage',
'Arrival of a baby',
'Someone else moving in or out of your home',
'Other major life change',
'None of the above')
num.toColnum<- function(n) {
result <- n+129
# skip variable 147
if (n==18)  {
result <- result + 1
}
stopifnot(result >= 130)
stopifnot( result <= 148)
return(result)
}
num.toDesc <- function(n) {
stopifnot(n >= 1)
stopifnot( n <= 18)
descs <- c( 'Serious illness or injury',
'Serious illness or injury in close relative',
'Death of 1st degree relative',
'Death in more distant relative',
'Marital separation',
'Breaking off steady relationship',
'Serious problem with close friend, neighbour,..',
'Unemployment for more than 1 month',
'Being sacked from your job',
'Major financial crisis',
'Problems with police or court appearance',
'Something valuable lost of stolen',
'Change of job, including quitting,..',
'Marriage',
'Arrival of a baby',
'Someone else moving in or out of your home',
'Other major life change',
'None of the above')
return(descs[n])
}
getEventCounts <- function(n,f,m) {
#father
colname <- paste('fv',num.toColnum(n),sep='')
f[which(is.na(f[,colname])),colname] <- 0
f1 <- table(f[,colname],useNA='always')
f2 <- round(prop.table(f1),2)
f3 <- margin.table(f1)
#mother
colname <- paste('mv',num.toColnum(n),sep='')
m[which(is.na(m[,colname])),colname] <- 0
m1 <- table(m[,colname],useNA='always')
m2 <- round(prop.table(m1),2)
m3 <- margin.table(m1)
return(c(round(f1[2],0),
f2[2],
round(f1[1],0),
f2[1],
m1[2],m2[2],m1[1],m2[1],
# total father and mother
f1[2]+m1[2],
round((f1[2]+m1[2])/(f3[1]+m3[1]),2),
f1[1]+m1[1],
round((f1[1]+m1[1])/(f3[1]+m3[1]),2)))
}
f.cases <- f[which(f$id < 2000),]
f.controls <- f[which(f$id >= 2000),]
m.cases <- m[which(m$id < 2000),]
m.controls <- m[which(m$id >= 2000),]
e.cases <- getEventCounts(1,f=f.cases,m=m.cases)
e.controls <- getEventCounts(1,f=f.controls,m=m.controls)
getAllEventCounts <- function(f,m) {
for (i in 1:18) {
if (i == 1) {
events <- getEventCounts(1,f=f,m=m)
} else {
events <- rbind(events,getEventCounts(i,f=f,m=m))
}
}
}
e.all <- getEventCounts(1,f=f,m)
e.cases <- getEventCounts(1,f=f.cases,m=m.cases)
e.controls <- getEventCounts(1,f=f.controls,m=m.controls)
events[1,2]
dim(events)
#eventsTable <- table(events)
#eventsTable
# table(f$fv131,useNA='always')
# table(f$fv132,useNA='always')
# table(f$fv133,useNA='always')
# table(f$fv134,useNA='always')
# table(f$fv135,useNA='always')
# table(f$fv136,useNA='always')
# table(f$fv137,useNA='always')
# table(f$fv138,useNA='always')
# table(f$fv139,useNA='always')
# table(f$fv140,useNA='always')
# table(f$fv141,useNA='always')
# table(f$fv142,useNA='always')
# table(f$fv143,useNA='always')
# table(f$fv144,useNA='always')
# table(f$fv145,useNA='always')
# table(f$fv146,useNA='always')
# table(f$fv147,useNA='always')
# table(f$fv148,useNA='always')
#
#
# table(f$fv132,useNA='always')
# table(f$fv132,useNA='always')
# table(f$fv132,useNA='always')
# table(f$fv132,useNA='always')
# table(f$fv132,useNA='always')
source('~/Documents/dockerty/countEvents.R')
source('~/Documents/dockerty/countEvents.R')
library(kableExtra)
events.all <- cbind(descs,events.all)
source('~/Documents/dockerty/countEvents.R')
events.all
events.all <- getAllEventCounts(f=f,m)
events.cases <- getAllEventCounts(f=f.cases,m=m.cases)
events.controls <- getAllEventCounts(1,f=f.controls,m=m.controls)
source('~/Documents/dockerty/countEvents.R')
events.all <- getAllEventCounts(f=f,m)
events.cases <- getAllEventCounts(f=f.cases,m=m.cases)
events.controls <- getAllEventCounts(f=f.controls,m=m.controls)
events.all
getAllEventCounts(f=f,m)
m
f
getAllEventCounts <- function(f,m) {
for (i in 1:18) {
if (i == 1) {
events <- getEventCounts(1,f=f,m=m)
} else {
events <- rbind(events,getEventCounts(i,f=f,m=m))
}
}
}
events.all <- getAllEventCounts(f=f,m=m)
events.all
getAllEventCounts(f=f,m=m)
for (i in 1:18) {
if (i == 1) {
events <- getEventCounts(1,f=f,m=m)
} else {
events <- rbind(events,getEventCounts(i,f=f,m=m))
}
}
events
getAllEventCounts <- function(f,m) {
for (i in 1:18) {
if (i == 1) {
events <- getEventCounts(1,f=f,m=m)
} else {
events <- rbind(events,getEventCounts(i,f=f,m=m))
}
}
return(events)
}
events.all <- getAllEventCounts(f=f,m=m)
events.cases <- getAllEventCounts(f=f.cases,m=m.cases)
events.controls <- getAllEventCounts(f=f.controls,m=m.controls)
events.all
source('~/Documents/dockerty/countEvents.R')
events.all <- cbind(descs,events.all)
colnames(events.all) <- c('Life event','Y','%','N','%',
'Y','%','N','%',
'Y','%','N','%')
rownames(events.all) <- NULL
et <- kable(events.all,digits=2, caption = "Cases and controls") %>%
kable_styling(full_width = F,bootstrap_options = "striped", position = "left")
add_header_above(et, c(" ", "Fathers" = 4, "Mothers" = 4,"Total"=4))
printEventsTable <- function(events,caption) {
events <- cbind(descs,events)
colnames(events) <- c('Life event','Y','%','N','%',
'Y','%','N','%',
'Y','%','N','%')
rownames(events) <- NULL
et <- kable(events.all,digits=2, caption = caption) %>%
kable_styling(full_width = F,bootstrap_options = "striped",          position = "left")
add_header_above(et, c(" ", "Fathers" = 4, "Mothers" = 4,"Total"=4))
}
printEventsTable(events=events.all,caption="Cases and controls")
events.all
printEventsTable <- function(events,caption) {
events <- cbind(descs,events)
colnames(events) <- c('Life event','Y','%','N','%',
'Y','%','N','%',
'Y','%','N','%')
rownames(events) <- NULL
et <- kable(events,digits=2, caption = caption) %>%
kable_styling(full_width = F,bootstrap_options = "striped",          position = "left")
add_header_above(et, c(" ", "Fathers" = 4, "Mothers" = 4,"Total"=4))
}
printEventsTable(events=events.all,caption="Cases and controls")
events.all <- getAllEventCounts(f=f,m=m)
events.all
dim(events.all)
events=events.all
events <- cbind(descs,events)
colnames(events) <- c('Life event','Y','%','N','%',
'Y','%','N','%',
'Y','%','N','%')
rownames(events) <- NULL
caption ='fred'
et <- kable(events,digits=2, caption = caption) %>%
kable_styling(full_width = F,bootstrap_options = "striped",          position = "left")
add_header_above(et, c(" ", "Fathers" = 4, "Mothers" = 4,"Total"=4))
printEventsTable <- function(events,caption) {
events <- cbind(descs,events)
colnames(events) <- c('Life event','Y','%','N','%',
'Y','%','N','%',
'Y','%','N','%')
rownames(events) <- NULL
et <- kable(events,digits=2, caption = caption) %>%
kable_styling(full_width = F,bootstrap_options = "striped",          position = "left")
add_header_above(et, c(" ", "Fathers" = 4, "Mothers" = 4,"Total"=4))
}
printEventsTable(events=events.all,caption="Cases and controls")
printEventsTable(events=events.cases,caption="Cases")
printEventsTable(events=events.controls,caption="Controls")
printEventsTable <- function(ev,caption) {
events <- cbind(descs,ev)
colnames(events) <- c('Life event','Y','%','N','%',
'Y','%','N','%',
'Y','%','N','%')
rownames(events) <- NULL
et <- kable(events,digits=2, caption = caption) %>%
kable_styling(full_width = F,bootstrap_options = "striped",          position = "left")
add_header_above(et, c(" ", "Fathers" = 4, "Mothers" = 4,"Total"=4))
}
printEventsTable(events=events.all,caption="Cases and controls")
printEventsTable(ev=events.all,caption="Cases and controls")
printEventsTable(ev=events.cases,caption="Cases")
printEventsTable(ev=events.controls,caption="Controls")
ev= events.all
events <- cbind(descs,ev)
colnames(events) <- c('Life event','Y','%','N','%',
'Y','%','N','%',
'Y','%','N','%')
rownames(events) <- NULL
et <- kable(events,digits=2, caption = caption) %>%
kable_styling(full_width = F,bootstrap_options = "striped",          position = "left")
add_header_above(et, c(" ", "Fathers" = 4, "Mothers" = 4,"Total"=4))
printEventsTable <- function(ev,caption,descs) {
events <- cbind(descs,ev)
colnames(events) <- c('Life event','Y','%','N','%',
'Y','%','N','%',
'Y','%','N','%')
rownames(events) <- NULL
et <- kable(events,digits=2, caption = caption) %>%
kable_styling(full_width = F,bootstrap_options = "striped",          position = "left")
add_header_above(et, c(" ", "Fathers" = 4, "Mothers" = 4,"Total"=4))
}
printEventsTable(ev=events.all,caption="Cases and controls",descs)
printEventsTable(ev=events.cases,caption="Cases",descs)
printEventsTable <- function(ev,caption,descs) {
events <- NULL
events <- cbind(descs,ev)
colnames(events) <- c('Life event','Y','%','N','%',
'Y','%','N','%',
'Y','%','N','%')
rownames(events) <- NULL
et <- kable(events,digits=2, caption = caption) %>%
kable_styling(full_width = F,bootstrap_options = "striped",          position = "left")
add_header_above(et, c(" ", "Fathers" = 4, "Mothers" = 4,"Total"=4))
}
printEventsTable <- function(ev,caption,descs) {
events <- cbind(descs,ev)
colnames(events) <- c('Life event','Y','%','N','%',
'Y','%','N','%',
'Y','%','N','%')
rownames(events) <- NULL
et <- kable(events,digits=2, caption = caption) %>%
kable_styling(full_width = F,bootstrap_options = "striped",          position = "left")
add_header_above(et, c(" ", "Fathers" = 4, "Mothers" = 4,"Total"=4))
}
printEventsTable(ev=events.all,caption="Cases and controls",descs)
printEventsTable(ev=events.cases,caption="Cases",descs)
events = NULL
events.all
printEventsTable(ev=events.all,caption="Cases and controls",descs)
printEventsTable(ev=events.cases,caption="Cases",descs)
source('~/Documents/dockerty/countEvents.R')
library(kableExtra)
printEventsTable <- function(ev,caption,descs) {
events <- cbind(descs,ev)
colnames(events) <- c('Life event','Y','%','N','%',
'Y','%','N','%',
'Y','%','N','%')
rownames(events) <- NULL
et <- kable(events,digits=2, caption = caption) %>%
kable_styling(full_width = F,bootstrap_options = "striped",          position = "left")
add_header_above(et, c(" ", "Fathers" = 4, "Mothers" = 4,"Total"=4))
}
printEventsTable(ev=events.all,caption="Cases and controls",descs)
printEventsTable(ev=events.cases,caption="Cases",descs)
printEventsTable(ev=events.controls,caption="Controls",descs)
printEventsTable <- function(ev,caption,descs) {
events <- cbind(descs,rep(12,12))
colnames(events) <- c('Life event','Y','%','N','%',
'Y','%','N','%',
'Y','%','N','%')
rownames(events) <- NULL
et <- kable(events,digits=2, caption = caption) %>%
kable_styling(full_width = F,bootstrap_options = "striped",          position = "left")
add_header_above(et, c(" ", "Fathers" = 4, "Mothers" = 4,"Total"=4))
}
printEventsTable <- function(ev,caption,descs) {
events <- cbind(descs,ev)
colnames(events) <- c('Life event','Y','%','N','%',
'Y','%','N','%',
'Y','%','N','%')
rownames(events) <- NULL
et <- kable(events,digits=2, caption = caption) %>%
kable_styling(full_width = F,bootstrap_options = "striped", position = "left")
add_header_above(et, c(" ", "Fathers" = 4, "Mothers" = 4,"Total"=4))
}
